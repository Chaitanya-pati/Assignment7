<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wheat Quality Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .navbar-brand {
            font-weight: bold;
        }

        .status-pending {
            color: #ff6b35;
        }

        .status-confirmed {
            color: #28a745;
        }

        .status-rejected {
            color: #dc3545;
        }

        .status-completed {
            color: #6c757d;
        }

        .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-gradient {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border: none;
        }

        .sidebar {
            min-height: 100vh;
            background: #f8f9fa;
        }

        .main-content {
            padding: 20px;
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .badge-category {
            font-size: 0.9em;
            padding: 0.5em 0.75em;
        }

        .dashboard-card {
            border-left: 4px solid #667eea;
        }

        .alert-custom {
            border-left: 4px solid #28a745;
        }

        .decision-history {
            max-height: 300px;
            overflow-y: auto;
        }

        .decision-card {
            border-left: 3px solid #007bff;
            margin-bottom: 10px;
        }

        .photo-capture-container {
            border: 2px dashed #ddd;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            background: #f9f9f9;
        }

        .photo-preview {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }

        .photo-item {
            position: relative;
            width: 120px;
            height: 120px;
            border: 2px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

            .photo-item img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .photo-delete {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(220, 53, 69, 0.8);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 12px;
            cursor: pointer;
        }

        .video-preview {
            width: 100%;
            max-width: 400px;
            height: 300px;
            border: 2px solid #ddd;
            border-radius: 8px;
            background: #000;
        }

        .camera-controls {
            margin-top: 10px;
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .quality-alert {
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            color: white;
            padding: 15px;
            border-radius: 8px;
            margin: 15px 0;
        }

        .quality-parameters {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
        }

        .parameter-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }

        .parameter-value {
            font-weight: bold;
        }

        .parameter-status {
            font-size: 0.85em;
            padding: 2px 8px;
            border-radius: 12px;
        }

        .status-good {
            background: #d4edda;
            color: #155724;
        }

        .status-warning {
            background: #fff3cd;
            color: #856404;
        }

        .status-danger {
            background: #f8d7da;
            color: #721c24;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#"><i class="fas fa-seedling"></i> Wheat Quality System</a>
            <div class="navbar-nav ms-auto">
                <span class="navbar-text me-3">Welcome, <span id="currentUser">Admin</span></span>
                <button class="btn btn-outline-light btn-sm" onclick="logout()">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar">
                <div class="nav flex-column nav-pills mt-3">
                    <button class="nav-link active" onclick="showModule('dashboard')">
                        <i class="fas fa-tachometer-alt"></i> Dashboard
                    </button>
                    <button class="nav-link" onclick="showModule('vehicles')">
                        <i class="fas fa-truck"></i> Vehicle Entry
                    </button>
                    <button class="nav-link" onclick="showModule('suppliers')">
                        <i class="fas fa-building"></i> Supplier Management
                    </button>
                    <button class="nav-link" onclick="showModule('samples')">
                        <i class="fas fa-flask"></i> Sample Entry
                    </button>
                    <button class="nav-link" onclick="showModule('tests')">
                        <i class="fas fa-microscope"></i> Lab Testing
                    </button>
                    <button class="nav-link" onclick="showModule('confirmations')">
                        <i class="fas fa-check-circle"></i> Owner Confirmation
                    </button>
                    <button class="nav-link" onclick="showModule('unloading')">
                        <i class="fas fa-warehouse"></i> Unloading Entry
                    </button>
                    <button class="nav-link" onclick="showModule('claims')">
                        <i class="fas fa-exclamation-triangle"></i> Quality Claims
                    </button>
                    <button class="nav-link" onclick="showModule('reports')">
                        <i class="fas fa-chart-bar"></i> Reports
                    </button>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-10 main-content">
                <!-- Dashboard Module -->
                <div id="dashboard" class="module">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-tachometer-alt"></i> Dashboard</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="card dashboard-card">
                                        <div class="card-body">
                                            <h6>Total Vehicles</h6>
                                            <h3 id="totalVehicles">0</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card dashboard-card">
                                        <div class="card-body">
                                            <h6>Pending Samples</h6>
                                            <h3 id="pendingSamples">0</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card dashboard-card">
                                        <div class="card-body">
                                            <h6>Pending Tests</h6>
                                            <h3 id="pendingTests">0</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="card dashboard-card">
                                        <div class="card-body">
                                            <h6>Quality Claims</h6>
                                            <h3 id="totalClaims">0</h3>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Vehicle Entry Module -->
                <div id="vehicles" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-truck"></i> Vehicle Entry</h5>
                            <button class="btn btn-light btn-sm" onclick="openVehicleModal()">
                                <i class="fas fa-plus"></i> Add Vehicle
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Vehicle No</th>
                                            <th>Driver</th>
                                            <th>Arrival Time</th>
                                            <th>Supplier</th>
                                            <th>Photos</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="vehicleTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Supplier Management Module -->
                <div id="suppliers" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-building"></i> Supplier Management</h5>
                            <button class="btn btn-light btn-sm" onclick="openSupplierModal()">
                                <i class="fas fa-plus"></i> Add Supplier
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Supplier Name</th>
                                            <th>Contact Person</th>
                                            <th>Phone</th>
                                            <th>Address</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="supplierTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Sample Entry Module -->
                <div id="samples" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-flask"></i> Sample Entry</h5>
                            <button class="btn btn-light btn-sm" onclick="openSampleModal()">
                                <i class="fas fa-plus"></i> Collect Sample
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Sample ID</th>
                                            <th>Vehicle No</th>
                                            <th>Supplier</th>
                                            <th>Sampling Time</th>
                                            <th>Bags Count</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="sampleTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Lab Testing Module -->
                <div id="tests" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-microscope"></i> Lab Testing</h5>
                            <button class="btn btn-light btn-sm" onclick="openTestModal()">
                                <i class="fas fa-plus"></i> Add Test Result
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Sample ID</th>
                                            <th>Vehicle No</th>
                                            <th>Moisture %</th>
                                            <th>Foreign Matter %</th>
                                            <th>Color</th>
                                            <th>Category</th>
                                            <th>Quality Issues</th>
                                            <th>Test Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="testTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Owner Confirmation Module -->
                <div id="confirmations" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-check-circle"></i> Owner Confirmation & Category Assignment</h5>
                        </div>
                        <div class="card-body">
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i>
                                <strong>Owner Controls:</strong> Review test results, assign final category, and approve unloading with storage area assignment.
                            </div>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Vehicle No</th>
                                            <th>Supplier</th>
                                            <th>Test Results</th>
                                            <th>Auto Category</th>
                                            <th>Final Category</th>
                                            <th>Storage Area</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="confirmationTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Unloading Entry Module -->
                <div id="unloading" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-warehouse"></i> Unloading Entry</h5>
                            <button class="btn btn-light btn-sm" onclick="openUnloadingModal()">
                                <i class="fas fa-plus"></i> Record Unloading
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Vehicle No</th>
                                            <th>Supplier</th>
                                            <th>Category</th>
                                            <th>Storage Area</th>
                                            <th>Unloading Time</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="unloadingTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quality Claims Module -->
                <div id="claims" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5><i class="fas fa-exclamation-triangle"></i> Quality Claims</h5>
                            <button class="btn btn-light btn-sm" onclick="openClaimModal()">
                                <i class="fas fa-plus"></i> Raise Claim
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Claim ID</th>
                                            <th>Vehicle No</th>
                                            <th>Supplier</th>
                                            <th>Reason</th>
                                            <th>Claim Date</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="claimTableBody"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Reports Module -->
                <div id="reports" class="module" style="display: none;">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-chart-bar"></i> Reports & Analytics</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6>Daily Summary</h6>
                                            <div id="dailySummary"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6>Category Distribution</h6>
                                            <div id="categoryDistribution"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6>Supplier Performance</h6>
                                            <div id="supplierPerformance"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Vehicle Modal -->
    <div class="modal fade" id="vehicleModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Vehicle Entry</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div id="vehicleForm">
                    <div class="modal-body">
                        <input type="hidden" id="vehicleEditIndex">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Vehicle Number</label>
                                <input type="text" id="vehicleNumber" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Driver Name</label>
                                <input type="text" id="driverName" class="form-control" required>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label class="form-label">Arrival Time</label>
                                <input type="datetime-local" id="arrivalTime" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Supplier</label>
                                <select id="supplierSelect" class="form-select" required>
                                    <option value="">Select Supplier</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <label class="form-label"><strong>Vehicle Photos</strong></label>
                                <div class="photo-capture-container">
                                    <i class="fas fa-camera fa-3x text-muted mb-3"></i>
                                    <h6>Capture Vehicle Photos</h6>
                                    <p class="text-muted">Take multiple photos of the vehicle and wheat load</p>
                                    <div id="cameraSection" style="display: none;">
                                        <video id="cameraVideo" class="video-preview" autoplay></video>
                                        <div class="camera-controls">
                                            <button type="button" id="captureBtn" class="btn btn-primary">
                                                <i class="fas fa-camera"></i> Capture Photo
                                            </button>
                                            <button type="button" id="stopCameraBtn" class="btn btn-secondary">
                                                <i class="fas fa-stop"></i> Stop Camera
                                            </button>
                                        </div>
                                    </div>
                                    <div class="mt-3">
                                        <button type="button" id="startCameraBtn" class="btn btn-info me-2">
                                            <i class="fas fa-video"></i> Start Camera
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" onclick="document.getElementById('fileInput').click()">
                                            <i class="fas fa-upload"></i> Upload from Device
                                        </button>
                                        <input type="file" id="fileInput" accept="image/*" multiple style="display: none;">
                                    </div>
                                </div>
                                <div id="photoPreview" class="photo-preview"></div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="saveVehicle()">Save Vehicle</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Supplier Modal -->
    <div class="modal fade" id="supplierModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Supplier Management</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div id="supplierForm">
                    <div class="modal-body">
                        <input type="hidden" id="supplierEditIndex">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Supplier Name</label>
                                <input type="text" id="supplierName" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Contact Person</label>
                                <input type="text" id="contactPerson" class="form-control" required>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label class="form-label">Phone</label>
                                <input type="tel" id="supplierPhone" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Email</label>
                                <input type="email" id="supplierEmail" class="form-control">
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <label class="form-label">Address</label>
                                <textarea id="supplierAddress" class="form-control" rows="3" required></textarea>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label class="form-label">Status</label>
                                <select id="supplierStatus" class="form-select" required>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                    <option value="Suspended">Suspended</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="saveSupplier()">Save Supplier</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sample Modal -->
    <div class="modal fade" id="sampleModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Sample Collection</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div id="sampleForm">
                    <div class="modal-body">
                        <input type="hidden" id="sampleEditIndex">
                        <div class="mb-3">
                            <label class="form-label">Vehicle</label>
                            <select id="sampleVehicleSelect" class="form-select" required>
                                <option value="">Select Vehicle</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Sampling Time</label>
                            <input type="datetime-local" id="samplingTime" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Number of Bags Sampled</label>
                            <input type="number" id="bagsCount" class="form-control" min="40" max="50" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <textarea id="sampleNotes" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="saveSample()">Save Sample</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Test Modal -->
    <div class="modal fade" id="testModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Lab Test Results</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div id="testForm">
                    <div class="modal-body">
                        <input type="hidden" id="testEditIndex">
                        <div class="mb-3">
                            <label class="form-label">Sample</label>
                            <select id="testSampleSelect" class="form-select" required>
                                <option value="">Select Sample</option>
                            </select>
                        </div>
                        <div class="quality-parameters">
                            <h6><i class="fas fa-microscope"></i> Test Parameters</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="form-label">Moisture %</label>
                                    <input type="number" id="moisturePercent" class="form-control" step="0.1" required>
                                    <small class="text-muted">Standard: ≤12% (Premium), ≤14% (Mill)</small>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Foreign Matter %</label>
                                    <input type="number" id="foreignMatterPercent" class="form-control" step="0.1" required>
                                    <small class="text-muted">Standard: ≤1% (Premium), ≤2% (Mill)</small>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <label class="form-label">Color Grade</label>
                                    <select id="colorGrade" class="form-select" required>
                                        <option value="">Select Color</option>
                                        <option value="Excellent">Excellent</option>
                                        <option value="Good">Good</option>
                                        <option value="Fair">Fair</option>
                                        <option value="Poor">Poor</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Category (Auto-determined)</label>
                                    <input type="text" id="categoryResult" class="form-control" readonly />
                                </div>
                            </div>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Test Date</label>
                            <input type="datetime-local" id="testDate" class="form-control" required>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Lab Technician Notes</label>
                            <textarea id="testNotes" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="saveTest()">Save Test Result</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Global Data Storage
        let vehicles = [];
        let suppliers = [];
        let samples = [];
        let tests = [];
        let claims = [];
        let unloadings = [];
        let ownerDecisions = [];
        let vehiclePhotos = {};
        let currentStream = null;

        // Initialize App
        function initializeApp() {
            loadData();
            populateSupplierDropdowns();
            updateDashboard();
            setCurrentDateTime();
            initializeCameraControls();
            initializeRoleBasedAccess();
        }

        // Core Functions
        function showModule(moduleId) {
            document.querySelectorAll('.module').forEach(module => {
                module.style.display = 'none';
            });
            document.querySelectorAll('.nav-link').forEach(link => {
                link.classList.remove('active');
            });

            const moduleElement = document.getElementById(moduleId);
            if (moduleElement) {
                moduleElement.style.display = 'block';
            }

            const clickedLink = document.querySelector(`[onclick="showModule('${moduleId}')"]`);
            if (clickedLink) {
                clickedLink.classList.add('active');
            }

            switch(moduleId) {
                case 'dashboard': updateDashboard(); break;
                case 'vehicles': loadVehicleTable(); break;
                case 'suppliers': loadSupplierTable(); break;
                case 'samples': loadSampleTable(); break;
                case 'tests': loadTestTable(); break;
                case 'confirmations': loadConfirmationTable(); break;
                case 'unloading': loadUnloadingTable(); break;
                case 'claims': loadClaimTable(); break;
                case 'reports': loadReports(); break;
            }
        }

        function logout() {
            if (confirm('Are you sure you want to logout?')) {
                showAlert('Logged out successfully!', 'success');
            }
        }

        function loadData() {
            if (suppliers.length === 0) {
                suppliers = [{
                    name: "ABC Wheat Suppliers",
                    contactPerson: "John Doe",
                    phone: "123-456-7890",
                    email: "john@abcwheat.com",
                    address: "123 Main St, Wheat City",
                    status: "Active",
                    createdDate: new Date().toISOString()
                }];
            }
        }

        function saveData() {
            console.log('Data saved to memory');
        }

        // Camera Functions
        function initializeCameraControls() {
            const startCameraBtn = document.getElementById('startCameraBtn');
            const stopCameraBtn = document.getElementById('stopCameraBtn');
            const captureBtn = document.getElementById('captureBtn');
            const fileInput = document.getElementById('fileInput');

            if (startCameraBtn) startCameraBtn.addEventListener('click', startCamera);
            if (stopCameraBtn) stopCameraBtn.addEventListener('click', stopCamera);
            if (captureBtn) captureBtn.addEventListener('click', capturePhoto);
            if (fileInput) fileInput.addEventListener('change', handleFileUpload);
        }

        async function startCamera() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({
                    video: { width: { ideal: 1280 }, height: { ideal: 720 } }
                });

                const video = document.getElementById('cameraVideo');
                if (video) {
                    video.srcObject = stream;
                    currentStream = stream;

                    const cameraSection = document.getElementById('cameraSection');
                    const startBtn = document.getElementById('startCameraBtn');

                    if (cameraSection) cameraSection.style.display = 'block';
                    if (startBtn) startBtn.style.display = 'none';

                    showAlert('Camera started successfully', 'success');
                }
            } catch (error) {
                console.error('Error accessing camera:', error);
                showAlert('Unable to access camera. Please check permissions.', 'danger');
            }
        }

        function stopCamera() {
            if (currentStream) {
                currentStream.getTracks().forEach(track => track.stop());
                currentStream = null;

                const cameraSection = document.getElementById('cameraSection');
                const startBtn = document.getElementById('startCameraBtn');

                if (cameraSection) cameraSection.style.display = 'none';
                if (startBtn) startBtn.style.display = 'inline-block';

                showAlert('Camera stopped', 'info');
            }
        }

        function capturePhoto() {
            const video = document.getElementById('cameraVideo');
            if (!video) return;

            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0);

            const imageData = canvas.toDataURL('image/jpeg', 0.8);
            addPhotoToPreview(imageData, `Photo_${Date.now()}.jpg`);

            showAlert('Photo captured successfully', 'success');
        }

        function handleFileUpload(event) {
            const files = Array.from(event.target.files);
            files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        addPhotoToPreview(e.target.result, file.name);
                    };
                    reader.readAsDataURL(file);
                }
            });
            showAlert(`${files.length} photo(s) uploaded`, 'success');
        }

        function addPhotoToPreview(imageData, fileName) {
            const previewContainer = document.getElementById('photoPreview');
            if (!previewContainer) return;

            const photoItem = document.createElement('div');
            photoItem.className = 'photo-item';
            photoItem.innerHTML = `
                <img src="${imageData}" alt="${fileName}" />
                <button type="button" class="photo-delete" onclick="removePhoto(this)">&times;</button>
            `;
            previewContainer.appendChild(photoItem);
        }

        function removePhoto(button) {
            if (button && button.parentElement) {
                button.parentElement.remove();
            }
        }

        function getVehiclePhotos() {
            const photoItems = document.querySelectorAll('.photo-item img');
            return Array.from(photoItems).map(img => ({
                data: img.src,
                name: img.alt,
                timestamp: new Date().toISOString()
            }));
        }

        // Vehicle Management
        function openVehicleModal(index = null) {
            const modal = new bootstrap.Modal(document.getElementById('vehicleModal'));

            // Reset form
            document.getElementById('vehicleEditIndex').value = '';
            document.getElementById('vehicleNumber').value = '';
            document.getElementById('driverName').value = '';
            document.getElementById('arrivalTime').value = '';
            document.getElementById('supplierSelect').value = '';
            document.getElementById('photoPreview').innerHTML = '';

            if (index !== null) {
                const vehicle = vehicles[index];
                document.getElementById('vehicleEditIndex').value = index;
                document.getElementById('vehicleNumber').value = vehicle.vehicleNumber;
                document.getElementById('driverName').value = vehicle.driverName;
                document.getElementById('arrivalTime').value = vehicle.arrivalTime;
                document.getElementById('supplierSelect').value = vehicle.supplier;
                document.querySelector('#vehicleModal .modal-title').textContent = 'Edit Vehicle';

                const photos = vehiclePhotos[vehicle.vehicleNumber] || [];
                photos.forEach(photo => {
                    addPhotoToPreview(photo.data, photo.name);
                });
            } else {
                document.querySelector('#vehicleModal .modal-title').textContent = 'Add Vehicle';
                setCurrentDateTime('arrivalTime');
            }
            modal.show();
        }

        function saveVehicle() {
            const index = document.getElementById('vehicleEditIndex').value;
            const vehicleNumber = document.getElementById('vehicleNumber').value;
            const driverName = document.getElementById('driverName').value;
            const arrivalTime = document.getElementById('arrivalTime').value;
            const supplier = document.getElementById('supplierSelect').value;

            if (!vehicleNumber || !driverName || !arrivalTime || !supplier) {
                showAlert('Please fill all required fields', 'warning');
                return;
            }

            const vehicle = {
                vehicleNumber: vehicleNumber,
                driverName: driverName,
                arrivalTime: arrivalTime,
                supplier: supplier,
                status: 'Pending Sampling',
                entryTime: new Date().toISOString()
            };

            const photos = getVehiclePhotos();
            if (photos.length > 0) {
                vehiclePhotos[vehicleNumber] = photos;
            }

            if (index === '' || index === undefined) {
                vehicles.push(vehicle);
            } else {
                vehicles[parseInt(index)] = { ...vehicles[parseInt(index)], ...vehicle };
            }

            saveData();
            loadVehicleTable();
            updateDashboard();
            populateVehicleDropdowns();

            const vehicleModal = bootstrap.Modal.getInstance(document.getElementById('vehicleModal'));
            if (vehicleModal) vehicleModal.hide();

            showAlert('Vehicle saved successfully!', 'success');
            stopCamera();
        }

        function loadVehicleTable() {
            const tbody = document.getElementById('vehicleTableBody');
            if (!tbody) return;

            tbody.innerHTML = '';
            vehicles.forEach((vehicle, index) => {
                const statusClass = getStatusClass(vehicle.status);
                const photos = vehiclePhotos[vehicle.vehicleNumber] || [];
                const photoDisplay = photos.length > 0 ?
                    `<span class="text-info">${photos.length} photo(s)</span>` :
                    '<span class="text-muted">No photos</span>';

                tbody.innerHTML += `
                    <tr>
                        <td>${vehicle.vehicleNumber}</td>
                        <td>${vehicle.driverName}</td>
                        <td>${new Date(vehicle.arrivalTime).toLocaleString()}</td>
                        <td>${vehicle.supplier}</td>
                        <td>${photoDisplay}</td>
                        <td><span class="badge ${statusClass}">${vehicle.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" onclick="openVehicleModal(${index})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteVehicle(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
        }

        function deleteVehicle(index) {
            if (confirm('Are you sure you want to delete this vehicle?')) {
                const vehicleNumber = vehicles[index].vehicleNumber;
                vehicles.splice(index, 1);
                delete vehiclePhotos[vehicleNumber];
                saveData();
                loadVehicleTable();
                updateDashboard();
                populateVehicleDropdowns();
                showAlert('Vehicle deleted successfully!', 'success');
            }
        }

        // Supplier Management
        function openSupplierModal(index = null) {
            const modal = new bootstrap.Modal(document.getElementById('supplierModal'));

            // Reset form
            document.getElementById('supplierEditIndex').value = '';
            document.getElementById('supplierName').value = '';
            document.getElementById('contactPerson').value = '';
            document.getElementById('supplierPhone').value = '';
            document.getElementById('supplierEmail').value = '';
            document.getElementById('supplierAddress').value = '';
            document.getElementById('supplierStatus').value = 'Active';

            if (index !== null) {
                const supplier = suppliers[index];
                document.getElementById('supplierEditIndex').value = index;
                document.getElementById('supplierName').value = supplier.name;
                document.getElementById('contactPerson').value = supplier.contactPerson;
                document.getElementById('supplierPhone').value = supplier.phone;
                document.getElementById('supplierEmail').value = supplier.email || '';
                document.getElementById('supplierAddress').value = supplier.address;
                document.getElementById('supplierStatus').value = supplier.status;
                document.querySelector('#supplierModal .modal-title').textContent = 'Edit Supplier';
            } else {
                document.querySelector('#supplierModal .modal-title').textContent = 'Add Supplier';
            }
            modal.show();
        }

        function saveSupplier() {
            const index = document.getElementById('supplierEditIndex').value;
            const name = document.getElementById('supplierName').value;
            const contactPerson = document.getElementById('contactPerson').value;
            const phone = document.getElementById('supplierPhone').value;
            const email = document.getElementById('supplierEmail').value;
            const address = document.getElementById('supplierAddress').value;
            const status = document.getElementById('supplierStatus').value;

            if (!name || !contactPerson || !phone || !address) {
                showAlert('Please fill all required fields', 'warning');
                return;
            }

            const supplier = {
                name: name,
                contactPerson: contactPerson,
                phone: phone,
                email: email,
                address: address,
                status: status,
                createdDate: index === '' ? new Date().toISOString() : (suppliers[parseInt(index)]?.createdDate || new Date().toISOString()),
                updatedDate: new Date().toISOString()
            };

            if (index === '' || index === undefined) {
                suppliers.push(supplier);
            } else {
                suppliers[parseInt(index)] = supplier;
            }

            saveData();
            loadSupplierTable();
            populateSupplierDropdowns();

            const supplierModal = bootstrap.Modal.getInstance(document.getElementById('supplierModal'));
            if (supplierModal) supplierModal.hide();

            showAlert('Supplier saved successfully!', 'success');
        }

        function loadSupplierTable() {
            const tbody = document.getElementById('supplierTableBody');
            if (!tbody) return;

            tbody.innerHTML = '';
            suppliers.forEach((supplier, index) => {
                const statusClass = supplier.status === 'Active' ? 'bg-success' :
                                  supplier.status === 'Inactive' ? 'bg-secondary' : 'bg-warning';
                tbody.innerHTML += `
                    <tr>
                        <td>${supplier.name}</td>
                        <td>${supplier.contactPerson}</td>
                        <td>${supplier.phone}</td>
                        <td>${supplier.address}</td>
                        <td><span class="badge ${statusClass}">${supplier.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" onclick="openSupplierModal(${index})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteSupplier(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
        }

        function deleteSupplier(index) {
            if (confirm('Are you sure you want to delete this supplier?')) {
                suppliers.splice(index, 1);
                saveData();
                loadSupplierTable();
                populateSupplierDropdowns();
                showAlert('Supplier deleted successfully!', 'success');
            }
        }

        // Sample Management
        function openSampleModal(index = null) {
            const modal = new bootstrap.Modal(document.getElementById('sampleModal'));
            populateVehicleDropdowns();

            // Reset form
            document.getElementById('sampleEditIndex').value = '';
            document.getElementById('sampleVehicleSelect').value = '';
            document.getElementById('samplingTime').value = '';
            document.getElementById('bagsCount').value = '';
            document.getElementById('sampleNotes').value = '';

            if (index !== null) {
                const sample = samples[index];
                document.getElementById('sampleEditIndex').value = index;
                document.getElementById('sampleVehicleSelect').value = sample.vehicleId;
                document.getElementById('samplingTime').value = sample.samplingTime;
                document.getElementById('bagsCount').value = sample.bagsCount;
                document.getElementById('sampleNotes').value = sample.notes;
                document.querySelector('#sampleModal .modal-title').textContent = 'Edit Sample';
            } else {
                document.querySelector('#sampleModal .modal-title').textContent = 'Collect Sample';
                setCurrentDateTime('samplingTime');
            }
            modal.show();
        }

        function saveSample() {
            const index = document.getElementById('sampleEditIndex').value;
            const vehicleId = document.getElementById('sampleVehicleSelect').value;
            const samplingTime = document.getElementById('samplingTime').value;
            const bagsCount = document.getElementById('bagsCount').value;
            const notes = document.getElementById('sampleNotes').value;

            if (!vehicleId || !samplingTime || !bagsCount) {
                showAlert('Please fill all required fields', 'warning');
                return;
            }

            const sample = {
                sampleId: index === '' ? 'SMP' + Date.now() : samples[parseInt(index)].sampleId,
                vehicleId: vehicleId,
                samplingTime: samplingTime,
                bagsCount: parseInt(bagsCount),
                notes: notes,
                status: 'Pending Test'
            };

            if (index === '' || index === undefined) {
                samples.push(sample);
                const vehicleIndex = vehicles.findIndex(v => v.vehicleNumber === sample.vehicleId);
                if (vehicleIndex !== -1) {
                    vehicles[vehicleIndex].status = 'Sample Collected';
                }
            } else {
                samples[parseInt(index)] = sample;
            }

            saveData();
            loadSampleTable();
            updateDashboard();
            populateSampleDropdowns();

            const sampleModal = bootstrap.Modal.getInstance(document.getElementById('sampleModal'));
            if (sampleModal) sampleModal.hide();

            showAlert('Sample saved successfully!', 'success');
        }

        function loadSampleTable() {
            const tbody = document.getElementById('sampleTableBody');
            if (!tbody) return;

            tbody.innerHTML = '';
            samples.forEach((sample, index) => {
                const vehicle = vehicles.find(v => v.vehicleNumber === sample.vehicleId);
                const statusClass = getStatusClass(sample.status);
                tbody.innerHTML += `
                    <tr>
                        <td>${sample.sampleId}</td>
                        <td>${sample.vehicleId}</td>
                        <td>${vehicle ? vehicle.supplier : 'N/A'}</td>
                        <td>${new Date(sample.samplingTime).toLocaleString()}</td>
                        <td>${sample.bagsCount}</td>
                        <td><span class="badge ${statusClass}">${sample.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" onclick="openSampleModal(${index})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteSample(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
        }

        function deleteSample(index) {
            if (confirm('Are you sure you want to delete this sample?')) {
                samples.splice(index, 1);
                saveData();
                loadSampleTable();
                updateDashboard();
                populateSampleDropdowns();
                showAlert('Sample deleted successfully!', 'success');
            }
        }

        // Test Management
        function openTestModal(index = null) {
            const modal = new bootstrap.Modal(document.getElementById('testModal'));
            populateSampleDropdowns();

            // Reset form
            document.getElementById('testEditIndex').value = '';
            document.getElementById('testSampleSelect').value = '';
            document.getElementById('moisturePercent').value = '';
            document.getElementById('foreignMatterPercent').value = '';
            document.getElementById('colorGrade').value = '';
            document.getElementById('categoryResult').value = '';
            document.getElementById('testDate').value = '';
            document.getElementById('testNotes').value = '';

            if (index !== null) {
                const test = tests[index];
                document.getElementById('testEditIndex').value = index;
                document.getElementById('testSampleSelect').value = test.sampleId;
                document.getElementById('moisturePercent').value = test.moisturePercent;
                document.getElementById('foreignMatterPercent').value = test.foreignMatterPercent;
                document.getElementById('colorGrade').value = test.colorGrade;
                document.getElementById('categoryResult').value = test.category;
                document.getElementById('testDate').value = test.testDate;
                document.getElementById('testNotes').value = test.notes || '';
                document.querySelector('#testModal .modal-title').textContent = 'Edit Test Result';
            } else {
                document.querySelector('#testModal .modal-title').textContent = 'Add Test Result';
                setCurrentDateTime('testDate');
            }
            modal.show();
        }

        function saveTest() {
            const index = document.getElementById('testEditIndex').value;
            const sampleId = document.getElementById('testSampleSelect').value;
            const moisturePercent = parseFloat(document.getElementById('moisturePercent').value);
            const foreignMatterPercent = parseFloat(document.getElementById('foreignMatterPercent').value);
            const colorGrade = document.getElementById('colorGrade').value;
            const testDate = document.getElementById('testDate').value;
            const notes = document.getElementById('testNotes').value;

            if (!sampleId || !moisturePercent || !foreignMatterPercent || !colorGrade || !testDate) {
                showAlert('Please fill all required fields', 'warning');
                return;
            }

            const category = determineCategory(moisturePercent, foreignMatterPercent, colorGrade);

            const test = {
                sampleId: sampleId,
                moisturePercent: moisturePercent,
                foreignMatterPercent: foreignMatterPercent,
                colorGrade: colorGrade,
                category: category,
                testDate: testDate,
                notes: notes,
                status: 'Waiting for Confirmation'
            };

            if (index === '' || index === undefined) {
                tests.push(test);
                const sampleIndex = samples.findIndex(s => s.sampleId === test.sampleId);
                if (sampleIndex !== -1) {
                    samples[sampleIndex].status = 'Test Completed';
                }
            } else {
                const existingTest = tests[parseInt(index)];
                tests[parseInt(index)] = { ...existingTest, ...test };
            }

            saveData();
            loadTestTable();
            updateDashboard();

            const testModal = bootstrap.Modal.getInstance(document.getElementById('testModal'));
            if (testModal) testModal.hide();

            showAlert('Test result saved successfully!', 'success');
        }

        function loadTestTable() {
            const tbody = document.getElementById('testTableBody');
            if (!tbody) return;

            tbody.innerHTML = '';
            tests.forEach((test, index) => {
                const sample = samples.find(s => s.sampleId === test.sampleId);
                const categoryBadge = getCategoryBadge(test.category);
                const hasQualityIssues = test.moisturePercent > 14 || test.foreignMatterPercent > 2 || test.colorGrade === 'Poor';
                const qualityIndicator = hasQualityIssues ?
                    '<span class="badge bg-warning"><i class="fas fa-exclamation-triangle"></i> Issues Detected</span>' :
                    '<span class="text-success"><i class="fas fa-check-circle"></i> No Issues</span>';

                tbody.innerHTML += `
                    <tr>
                        <td>${test.sampleId}</td>
                        <td>${sample ? sample.vehicleId : 'N/A'}</td>
                        <td>${test.moisturePercent}%</td>
                        <td>${test.foreignMatterPercent}%</td>
                        <td>${test.colorGrade}</td>
                        <td>${categoryBadge}</td>
                        <td>${qualityIndicator}</td>
                        <td>${new Date(test.testDate).toLocaleString()}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" onclick="openTestModal(${index})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteTest(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
        }

        function deleteTest(index) {
            if (confirm('Are you sure you want to delete this test result?')) {
                tests.splice(index, 1);
                saveData();
                loadTestTable();
                updateDashboard();
                showAlert('Test result deleted successfully!', 'success');
            }
        }

        // Placeholder functions for other modules
        function loadConfirmationTable() {
            const tbody = document.getElementById('confirmationTableBody');
            if (tbody) tbody.innerHTML = '<tr><td colspan="8" class="text-center">No confirmations pending</td></tr>';
        }

        function loadUnloadingTable() {
            const tbody = document.getElementById('unloadingTableBody');
            if (tbody) tbody.innerHTML = '<tr><td colspan="7" class="text-center">No unloading records</td></tr>';
        }

        function loadClaimTable() {
            const tbody = document.getElementById('claimTableBody');
            if (tbody) tbody.innerHTML = '<tr><td colspan="7" class="text-center">No claims raised</td></tr>';
        }

        function loadReports() {
            const dailySummary = document.getElementById('dailySummary');
            const categoryDistribution = document.getElementById('categoryDistribution');
            const supplierPerformance = document.getElementById('supplierPerformance');

            if (dailySummary) dailySummary.innerHTML = '<p>No data available</p>';
            if (categoryDistribution) categoryDistribution.innerHTML = '<p>No data available</p>';
            if (supplierPerformance) supplierPerformance.innerHTML = '<p>No data available</p>';
        }

        // Utility Functions
        function determineCategory(moisture, foreignMatter, color) {
            if (moisture <= 12 && foreignMatter <= 1 && (color === 'Excellent' || color === 'Good')) {
                return 'Premium';
            } else if (moisture <= 14 && foreignMatter <= 2 && (color === 'Good' || color === 'Fair')) {
                return 'Mill';
            } else {
                return 'Low Mill';
            }
        }

        function populateSupplierDropdowns() {
            const select = document.getElementById('supplierSelect');
            if (select) {
                select.innerHTML = '<option value="">Select Supplier</option>';
                suppliers.filter(s => s.status === 'Active').forEach(supplier => {
                    select.innerHTML += `<option value="${supplier.name}">${supplier.name}</option>`;
                });
            }
        }

        function populateVehicleDropdowns() {
            const select = document.getElementById('sampleVehicleSelect');
            if (select) {
                select.innerHTML = '<option value="">Select Vehicle</option>';
                vehicles.filter(v => ['Pending Sampling', 'Sample Collected'].includes(v.status)).forEach(vehicle => {
                    select.innerHTML += `<option value="${vehicle.vehicleNumber}">${vehicle.vehicleNumber} - ${vehicle.supplier}</option>`;
                });
            }
        }

        function populateSampleDropdowns() {
            const select = document.getElementById('testSampleSelect');
            if (select) {
                select.innerHTML = '<option value="">Select Sample</option>';
                samples.filter(s => s.status === 'Pending Test').forEach(sample => {
                    select.innerHTML += `<option value="${sample.sampleId}">${sample.sampleId} - ${sample.vehicleId}</option>`;
                });
            }
        }

        function getStatusClass(status) {
            const statusClasses = {
                'Pending Sampling': 'bg-warning',
                'Sample Collected': 'bg-info',
                'Test Completed': 'bg-primary',
                'Confirmed for Unloading': 'bg-success',
                'Completed': 'bg-secondary',
                'Pending Test': 'bg-warning',
                'Waiting for Confirmation': 'bg-info'
            };
            return statusClasses[status] || 'bg-secondary';
        }

        function getCategoryBadge(category) {
            const categoryClasses = {
                'Premium': 'bg-success',
                'Mill': 'bg-primary',
                'Low Mill': 'bg-warning',
                'Rejected': 'bg-danger'
            };
            return `<span class="badge ${categoryClasses[category] || 'bg-secondary'}">${category}</span>`;
        }

        function setCurrentDateTime(elementId = null) {
            const now = new Date();
            const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000).toISOString().slice(0, 16);
            if (elementId) {
                const element = document.getElementById(elementId);
                if (element) element.value = localDateTime;
            }
        }

        function showAlert(message, type = 'info') {
            const typeMap = {
                'error': 'danger',
                'success': 'success',
                'warning': 'warning',
                'info': 'info'
            };
            const alertType = typeMap[type] || type;

            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${alertType} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alertDiv);

            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 5000);
        }

        function initializeRoleBasedAccess() {
            const userRole = 'Admin';
            const currentUserEl = document.getElementById('currentUser');
            if (currentUserEl) currentUserEl.textContent = userRole;
        }

        function updateDashboard() {
            const totalVehiclesEl = document.getElementById('totalVehicles');
            const pendingSamplesEl = document.getElementById('pendingSamples');
            const pendingTestsEl = document.getElementById('pendingTests');
            const totalClaimsEl = document.getElementById('totalClaims');

            if (totalVehiclesEl) totalVehiclesEl.textContent = vehicles.length;
            if (pendingSamplesEl) pendingSamplesEl.textContent = vehicles.filter(v => v.status === 'Pending Sampling').length;
            if (pendingTestsEl) pendingTestsEl.textContent = samples.filter(s => s.status === 'Pending Test').length;
            if (totalClaimsEl) totalClaimsEl.textContent = claims.length;
        }

        // Global function assignments for onclick handlers
        window.showModule = showModule;
        window.openVehicleModal = openVehicleModal;
        window.saveVehicle = saveVehicle;
        window.deleteVehicle = deleteVehicle;
        window.openSupplierModal = openSupplierModal;
        window.saveSupplier = saveSupplier;
        window.deleteSupplier = deleteSupplier;
        window.openSampleModal = openSampleModal;
        window.saveSample = saveSample;
        window.deleteSample = deleteSample;
        window.openTestModal = openTestModal;
        window.saveTest = saveTest;
        window.deleteTest = deleteTest;
        window.removePhoto = removePhoto;
        window.logout = logout;

        // Initialize app when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            initializeApp();

            // Add event listeners for real-time category calculation
            const moistureInput = document.getElementById('moisturePercent');
            const foreignMatterInput = document.getElementById('foreignMatterPercent');
            const colorSelect = document.getElementById('colorGrade');

            if (moistureInput) {
                moistureInput.addEventListener('input', updateCategory);
            }
            if (foreignMatterInput) {
                foreignMatterInput.addEventListener('input', updateCategory);
            }
            if (colorSelect) {
                colorSelect.addEventListener('change', updateCategory);
            }

            function updateCategory() {
                const moisture = parseFloat(moistureInput?.value) || 0;
                const foreignMatter = parseFloat(foreignMatterInput?.value) || 0;
                const color = colorSelect?.value || '';

                if (moisture && foreignMatter && color) {
                    const category = determineCategory(moisture, foreignMatter, color);
                    const categoryResult = document.getElementById('categoryResult');
                    if (categoryResult) categoryResult.value = category;
                }
            }
        });

        // Auto-refresh dashboard every 30 seconds
        setInterval(updateDashboard, 30000);

        // Cleanup camera stream when page unloads
        window.addEventListener('beforeunload', function() {
            if (currentStream) {
                currentStream.getTracks().forEach(track => track.stop());
            }
        });
    </script>
</body>
</html>